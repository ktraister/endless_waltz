{{ define "content" }}
  <main class="px-3 align-items-center">
    <div align=center>
    <img class="mb-4" src="/img/ew.png" alt="" width="500" height="300">  
    <br>
    <br>
    <h1>User Information</h1>
    <hr style="width:50%">
    <h3>Username: {{.Username}}</h3>
    <h3>Email: {{.Email}}</h3>
    <h3>Active: {{.Active}}</h3>
    <br>
    <br>
    <br>
    <h2>Billing Information</h1>
    <hr style="width:50%">
    {{ if not .Premium }}
    <h3>Account Type: Basic</h3>
    <p>Upgrade at any time to get full EW_Messenger functionality!</p>
    <br>
    <form action="/switchToCrypto" method="POST">
      <input type="hidden" name="gorilla.csrf.Token" value="{{.TemplateTag}}">      
      <button id="crypto_button" class="btn btn-primary w-25 py-2">Upgrade to Premium with Crypto Billing</button>
    </form>
    <div class="hidden" id="checkout">
    </div>
    <br>
    <button id="card_button" onclick="card()" class="btn btn-primary w-25 py-2">Update to Premium with Card Billing</button>
    <button id="nvm_button" onclick="cancel()" class="hidden btn btn-primary w-25 py-2">Cancel</button>
    <br>
    {{ end }}
    {{ if .Card }}
    <h3>Account Type: Premium</h3>
    <h3>Payment Method: Card w/ Stripe</h3>
    <h3>Next Payment: {{.BillingCycleEnd}}</h3>
    <br>
    <form action="/switchToCrypto" method="POST">
      <input type="hidden" name="gorilla.csrf.Token" value="{{.TemplateTag}}">      
      <button id="crypto_button" class="btn btn-primary w-25 py-2">Switch to Crypto Billing</button>
    </form>
    <div class="hidden" id="checkout">
    </div>
    <br>
    <button id="card_button" onclick="card()" class="btn btn-primary w-25 py-2">Update Payment Information</button>
    <button id="nvm_button" onclick="cancel()" class="hidden btn btn-primary w-25 py-2">Cancel</button>
    {{ end }}
    {{ if .Crypto }}
    <h3>Account Type: Premium</h3>
    <h3>Payment Method: Crypto</h3>
    <h3>Next Payment Due: {{.BillingCycleEnd}}</h3>
    <form action="/api/cryptoPayment" method="GET">
      <input type="hidden" name="user" value="{{.Username}}">      
      <input type="hidden" name="email" value="{{.Email}}">      
      <input type="hidden" name="token" value="{{.Token}}">      
      <button id="crypto_button" class="btn btn-primary w-25 py-2">Make a Payment</button>
    </form>
    <div class="hidden" id="checkout">
    </div>
    <br>
    <button id="card_button" onclick="card()" class="btn btn-primary w-25 py-2">Switch to Card Billing</button>
    <button id="nvm_button" onclick="cancel()" class="hidden btn btn-primary w-25 py-2">Cancel</button>
    {{ end }}
    <br>
    <br>
    <br>
    <br>
    <h2>GDPR</h2>
    <hr style="width:50%">
    <p>In compliance with the EU's General Data Protection Regulation act, you can request all information Endless Waltz has about you.</p>
    <p>Use the below button to request a GDPR data report be sent to your listed email account. Please allow 5 minutes for delivery.</p>
    <form action="/GDPR" method="POST">
      <input type="hidden" name="gorilla.csrf.Token" value="{{.TemplateTag}}">      
      <button class="btn btn-secondary w-25 py-2">Request GDPR Data Report</button>
    </form>
    <br>
    <br>
    <br>
    <h2 style="color:red;">Destructive Actions</h2>
    <hr style="width:50%">
    <p class="lead">
    <form action="/forgotPassword">
      <button style="color: black; background-color: red;" class="btn btn-primary w-25 py-2">Change Password</button>
    </form>
    <br>
    <form action="/protected" method="POST">
      <input type="hidden" name="gorilla.csrf.Token" value="{{.TemplateTag}}">      
      <button style="color: black; background-color: red;" class="btn btn-primary w-25 py-2">Delete Account</button>
    </form>
    </p>
    </div>
    <script>
    function card() {
        var content = document.getElementById("card_button");
        var content2 = document.getElementById("checkout");
        var content3 = document.getElementById("nvm_button");
        var content4 = document.getElementById("crypto_button");
        content.classList.add("hidden");
        content4.classList.add("hidden");
        content2.classList.remove("hidden");
        content3.classList.remove("hidden");
    };

    function cancel() {
        var content = document.getElementById("card_button");
        var content2 = document.getElementById("checkout");
        var content3 = document.getElementById("nvm_button");
        var content4 = document.getElementById("crypto_button");
        content.classList.remove("hidden");
        content4.classList.remove("hidden");
        content2.classList.add("hidden");
        content3.classList.add("hidden");
    };


    // This is your test publishable API key.
    const stripe = Stripe("{{.StripeAPIPubKey}}");
 
    initialize();
 
    // Create a Checkout Session as soon as the page loads
    async function initialize() {
      const response = await fetch("/api/modify-checkout-session", {
        method: "POST",
	body: JSON.stringify({
	  Username: '{{.Username}}'
	}) 
      });
 
      const { clientSecret } = await response.json();
 
      const checkout = await stripe.initEmbeddedCheckout({
        clientSecret,
      });
 
      // Mount Checkout
      checkout.mount('#checkout');
    }
    </script>
  </main>
{{ end }}
