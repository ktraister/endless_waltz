{{ define "content" }}
<main class="form-signin w-50 m-auto centered-element">
  <div align=center>
  <form method="POST" action="/login">
    <img class="mb-4" src="/img/Icon.png" alt="" width="72" height="72">
    <h1 class="h3 mb-3 fw-normal">Sign in, please</h1>
    <input type="hidden" name="gorilla.csrf.Token" value="{{.TemplateTag}}">
    <div class="form-floating">
      <input type="text" name="username" class="form-control" id="floatingUser" placeholder="Username">
      <label for="floatingUser">Username</label>
      <span id="usernameError" style="color: red;"></span>
    </div>
    <div class="form-floating">
      <input type="password" name="password" class="form-control" id="floatingPassword" placeholder="Password">
      <label for="floatingPassword">Password</label>
      <span id="passwordError" style="color: red;"></span>
      <br>
    </div>
    <button class="btn btn-primary w-50 py-2" type="submit" value="Login">Sign in</button>
  </form>
  <br>
    <a class="h6 mb-3 fw-normal" href="/signUp">Need to sign up first?</a>
    <br>
    <a>or maybe</a>
    <br>
    <a class="h6 mb-3 fw-normal" href="/forgotPassword">Forgot your password?</a>
    </div>
    <script>
    document.querySelector('form').addEventListener('submit', function(event) {
        const username = document.querySelector('#floatingUser').value;
        const password = document.querySelector('#floatingPassword').value;
        const usernameError = document.querySelector('#usernameError');
        const passwordError = document.querySelector('#passwordError');

	//username special char check
        var format = /[ `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/;
        if (format.test(username)) {
            usernameError.textContent = 'Username must not contain special characters';
            event.preventDefault(); // Prevent form submission
	    return

	} else {
            usernameError.textContent = ''; // Clear any previous error message
        }

	let passText = 'Password is invalid!'

        //password length and complexity check 
        format = /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8,}$/;
        if (! format.test(password)) {
            passwordError.textContent = passText;
            event.preventDefault(); // Prevent form submission
	    return

	}  else {
            passwordError.textContent = ''; // Clear any previous error message
        }

    });
    </script>
</main>
{{ end }}
